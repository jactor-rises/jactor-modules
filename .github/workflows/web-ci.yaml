name: continuous integration on jactor-web
on:
  push:
    paths:
      - 'web/**'
      - 'shared/**'

jobs:

  env:
    runs-on: ubuntu-latest
    name: debug environment

    steps:
      - run: cat $GITHUB_EVENT_PATH
      - run: env

  build:
    runs-on: ubuntu-latest
    name: Build and test with gradle

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: ./gradlew :web:build --scan -x test
      - name: Verify dependencies
        run: |
          COUNT=$(./gradlew -q :web:dependencies | grep -c SNAPSHOT || true)

          echo "Found $COUNT SNAPSHOT dependencies"

          if [ "$COUNT" -gt 0 ]
          then
            >&2 echo ::error No SNAPSHOT dependencies allowed
            ./gradlew -q :web:dependencies
            exit 1;
          fi
      - run: ./gradlew :web:test --tests "*"

  integration:
    runs-on: ubuntu-latest
    name: Tests of web <-> persistence

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: ./gradlew :web:assemble
      - uses: jactor-rises/jactor-modules/persistence/run-docker@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE: ghcr.io/jactor-rises/jactor-modules
      - run: ./gradlew :web:test --tests "UserConsumerIntegrationTest"

  git:
    needs: [build, integration]
    if: github.ref == 'refs/heads/feature/semantic'
    name: Bump dev version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Fetch current semantic version
        id: current
        run: |
          git fetch --tags
          CURRENT_SEMVER=$(git tag --sort=-v:refname -l "*-snapshot-web" | sed 's;-snapshot-web;;'| head -n 1)
          echo ::set-output name=semver::$CURRENT_SEMVER
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: ./gradlew :web:assemble
      - name: Fetch current major/minor release
        id: version
        run: |
          MAJOR_MINOR=$(./gradlew :web:properties | grep version: | grep SNAPSHOT | awk '{print $2}' | sed 's;.x-SNAPSHOT;;')
          echo ::set-output name=toPatch::$MAJOR_MINOR
      - name: Create new semantic version
        id: semver
        run: |
          .github/workflows/new-semver.main.kts majorMinor=$PATCH_MAJOR_MINOR_VERSION semantic=$CURRENT_SEMANTIC_VERSION
          echo ::set-output name=new::$(cat newSemVer)
        env:
          CURRENT_SEMANTIC_VERSION: ${{ steps.current.outputs.semver }}
          PATCH_MAJOR_MINOR_VERSION: ${{ steps.version.outputs.toPatch }}
      - name: Fetch github event metadata
        id: metadata
        run: |
          echo ::set-output name=email::$(jq .commits $GITHUB_EVENT_PATH | jq '.[].committer.email' | head -n 1)
          echo ::set-output name=name::$(jq .commits $GITHUB_EVENT_PATH | jq '.[].author.name' | head -n 1)
      - name: Tag new snapshot semantic version
        run: |
          git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git config --global user.email "$AUTHOR_EMAIL"
          git config --global user.name "$AUTHOR_NAME"

          git tag -a "$SEMANTIC_VERSION_NEW-snapshot-web" -m "New snapshot tagged. Previous snapshot: $SEMANTIC_VERSION_CURRENT"
          git push --tags
        env:
          AUTHOR_EMAIL: ${{ steps.metadata.outputs.email }}
          AUTHOR_NAME: ${{ steps.metadata.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMANTIC_VERSION_CURRENT: ${{ steps.current.outputs.semver }}
          SEMANTIC_VERSION_NEW: ${{ steps.semver.outputs.new }}
