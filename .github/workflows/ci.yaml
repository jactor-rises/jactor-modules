name: continuous integration
on: push

env:
  IMAGE: ghcr.io/${{ github.repository }}:latest

jobs:

  build:
    runs-on: ubuntu-latest
    name: Build, create, and then publish

    steps:
      - uses: actions/checkout@v2
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - run: ./gradlew build -x test
      - name: Verify dependencies
        run: |
          COUNT=$(./gradlew -q dependencies | grep -c SNAPSHOT || true)

          echo "Found $COUNT SNAPSHOT dependencies"

          if [ "$COUNT" -gt 0 ]
          then
            >&2 echo ::error No SNAPSHOT dependencies allowed
            exit 1;
          fi
      - run: ./gradlew test --tests "*"
      - name: Build and publish docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          CONTAINER_ID=$(docker inspect --format="{{.Id}}" ${IMAGE})
          docker tag ${CONTAINER_ID} "ghcr.io/${GITHUB_REPOSITORY}:$(git rev-parse --short HEAD)"
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  cucumber:
    needs: build
    name: Integration tests with cucumber
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          repository: jactor-rises/jactor-cucumber
          path: jactor-cucumber
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      - uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/jactor-cucumber/pom.xml') }}
      - uses: jactor-rises/jactor-persistence/run-docker@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: run cucumber tests
        run: cd jactor-cucumber && mvn test -P cucumber

  git:
    if: github.ref == 'refs/heads/feature/semver'
    name: Bump dev version
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Fetch current snapshot tag
        id: current
        run: |
          git fetch --tags
          CURRENT_SEMVER=$(git tag --sort=-v:refname --list "snapshot-[0-9]*" | head -n 1 | sed 's;snapshot-;;')
          echo ::set-output name=semver::$CURRENT_SEMVER
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Fetch current major/minor release
        id: version
        run: |
          MAJOR_MINOR=$(./gradlew properties | grep version: | grep SNAPSHOT | awk '{print $2}' | sed 's;.x-SNAPSHOT;;')
          echo ::set-output name=toPatch::$MAJOR_MINOR
      - name: Create new semantic version
        id: semver
        run: |
          .github/scripts/new-semver.main.kts majorMinor=$PATCH_MAJOR_MINOR_VERSION semantic=$PATCH_MAJOR_MINOR_VERSION
          echo ::set-output name=new::$(cat newSemVer)
        env:
          CURRENT_SEMANTIC_VERSION: ${{ steps.current.outputs.semver }}
          PATCH_MAJOR_MINOR_VERSION: ${{ steps.version.outputs.toPatch }}
          IS_DEBUG: true
      - run: echo $CREATED_SEMVER_MESSAGE
        env:
          CREATED_SEMVER_MESSAGE: "created new semantic version ${{ steps.semver.outputs.new }}"
