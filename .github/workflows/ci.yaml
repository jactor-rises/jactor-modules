name: continuous integration
on:
  push:
    branches:
      - '**'

jobs:

  build:
    runs-on: ubuntu-latest
    name: Build and test with maven

    steps:
      - run: env
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - uses: jactor-rises/actions/maven-setup@v2-maven-setup
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,jactor-shared=https://maven.pkg.github.com/jactor-rises/jactor-shared
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: jactor-rises/actions/maven-verify-dependencies@v2-maven-verify-dependencies
      - run: mvn -B install -e

  integration:
    runs-on: ubuntu-latest
    name: Integration tests of jactor-web <-> jactor-persistence

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: jactor-rises/actions/maven-setup@v2-maven-setup
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,jactor-shared=https://maven.pkg.github.com/jactor-rises/jactor-shared
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: jactor-rises/jactor-persistence/run-docker@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE: ghcr.io/jactor-rises/jactor-persistence
      - run: mvn test -e -Dtest=UserConsumerIntegrationTest

  git:
    needs: [build, integration]
    if: github.ref == 'refs/heads/main'
    name: Tag new snapshot version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Fetch current snapshot tag
        id: current
        run: |
          git fetch --tags
          CURRENT_SEMVER=$(git tag --sort=-v:refname --list "snapshot-[0-9]*" | head -n 1 | sed 's;snapshot-;;')
          echo ::set-output name=semver::$CURRENT_SEMVER
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - uses: jactor-rises/actions/maven-setup@v2-maven-setup
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,jactor-shared=https://maven.pkg.github.com/jactor-rises/jactor-shared
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch current major/minor release
        id: version
        run: echo ::set-output name=toPatch::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's;.x-SNAPSHOT;;')
      - name: Create new semantic version
        id: semver
        run: |
          workflow/scripts/new-semver.main.kts majorMinor=$PATCH_MAJOR_MINOR_VERSION semantic=$CURRENT_SEMANTIC_VERSION
          echo ::set-output name=new::$(cat newSemVer)
        env:
          CURRENT_SEMANTIC_VERSION: ${{ steps.current.outputs.semver }}
          PATCH_MAJOR_MINOR_VERSION: ${{ steps.version.outputs.toPatch }}
      - name: Fetch github event metadata
        id: metadata
        run: |
          echo ::set-output name=email::$(jq .commits $GITHUB_EVENT_PATH | jq '.[].committer.email' | head -n 1)
          echo ::set-output name=name::$(jq .commits $GITHUB_EVENT_PATH | jq '.[].author.name' | head -n 1)
      - name: Tag new snapshot semantic version
        run: |
          git remote set-url origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git config --global user.email "$AUTHOR_EMAIL"
          git config --global user.name "$AUTHOR_NAME"
          git tag -a snapshot-$SEMANTIC_VERSION_NEW -m 'New snapshot tagged. Previous snapshot: $SEMANTIC_VERSION_CURRENT'
          git push --tags
        env:
          AUTHOR_EMAIL: ${{ steps.metadata.outputs.email }}
          AUTHOR_NAME: ${{ steps.metadata.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMANTIC_VERSION_CURRENT: ${{ steps.current.outputs.semver }}
          SEMANTIC_VERSION_NEW: ${{ steps.semver.outputs.new }}
