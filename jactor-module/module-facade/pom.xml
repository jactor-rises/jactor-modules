<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.jactor-rises.module</groupId>
    <artifactId>module-facade</artifactId>
    <name>jactor-rises::module-facade</name>
    <packaging>jar</packaging>

    <description>
        The role of the facade is to make the client come to life with the logic from the business module.
    </description>

    <properties>
        <assertj.version>3.8.0</assertj.version>
        <jactor.version>1.0-SNAPSHOT</jactor.version>
        <java.version>1.8</java.version>
        <junit.jupiter.version>5.0.0-M4</junit.jupiter.version>
        <junit-platform.version>1.0.0-M4</junit-platform.version>
        <mockito.version>2.7.22</mockito.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.jactor-rises</groupId>
                <artifactId>jactor-client</artifactId>
                <version>${jactor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jactor-rises.module</groupId>
                <artifactId>module-business</artifactId>
                <version>${jactor.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.github.jactor-rises</groupId>
            <artifactId>jactor-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.jactor-rises.module</groupId>
            <artifactId>module-business</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- third party -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Test scope -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
